{"version":3,"sources":["components/MyNavbar.js","components/Home.js","components/ContentArea.js","App.js","serviceWorker.js","index.js"],"names":["MyNavbar","props","react_default","a","createElement","Fragment","className","style","backgroundColor","width","href","color","tabIndex","role","data-toggle","data-trigger","title","data-content","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","printState","console","log","state","clearState","setState","show","showName","season","episode","chooseShow","e","name","target","shows","find","obj","shortName","chooseEpisode","Math","floor","random","episodes","length","eps","count","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","showTotal","testButton","searchHandler","search","findShow","encodeURI","fetch","concat","then","res","json","hits","JSON","parse","results","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","i","poster_path","searchHits","catch","something","chooseRando","rando","clickYourShow","what","bind","assertThisInitialized","_this2","components_MyNavbar","minHeight","onClick","border","borderRadius","height","fontSize","type","placeholder","onChange","map","first_air_date","id","verticalAlign","src","alt","maxWidth","origin_country","vote_average","vote_count","React","Component","ContentArea","components_Home","App","BrowserRouter","components_ContentArea","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.582f8ac9.chunk.js","sourcesContent":["import React from \"react\";\n\nconst MyNavbar = (props) => {\n\n    return (<React.Fragment>\n\n        {/*<nav className=\"navbar navbar-expand-xs navbar-light container-fluid fixed-top\" style={myNav}>*/}\n        <div className=\"container-fluid fixed-top py-1\" style={{backgroundColor: 'pink', width: '100%'}}>\n            <a href=\"#\" className=\"text-left d-inline-block mr-auto\" style={{color: 'white'}}>\n                <h3 className=\"font-weight-bold mb-0\">Show Shuffle</h3>\n                <p className=\"my-0\">back to Top</p>\n            </a>\n            <a tabIndex=\"0\" className=\"float-right btn btn-sm btn-outline-light d-inline-block mt-3\" role=\"button\" data-toggle=\"popover\" data-trigger=\"focus\" title=\"just pick a dang show already\" data-content=\"don't waste brainpower or time figuring out what to watch. we can guide u in 3 simple steps or suggest a complete rando -- up to you.\">?</a>\n        </div>\n        {/*</nav>*/}\n\n    </React.Fragment>);\n};\n\nexport default MyNavbar;","import React from 'react';\n\nimport MyNavbar from './MyNavbar';\n// import PopularShows from './PopularShows';\n\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: null,\n            showName: null,\n            season: null,\n            episode: null,\n            showTotal: null,\n            shows: [\n                {\n                    shortName: 'futurama',\n                    name: 'Futurama',\n                    episodes: [\n                        {season: 1, episodes: 13},\n                        {season: 2, episodes: 19},\n                        {season: 3, episodes: 22},\n                        {season: 4, episodes: 18},\n                        {season: 5, episodes: 16},\n                        {season: 6, episodes: 26},\n                        {season: 7, episodes: 26}\n                    ]\n                },\n                {\n                    shortName: 'theOffice',\n                    name: 'The Office',\n                    episodes: [\n                        {season: 1, episodes: 6},\n                        {season: 2, episodes: 22},\n                        {season: 3, episodes: 25},\n                        {season: 4, episodes: 19},\n                        {season: 5, episodes: 28},\n                        {season: 6, episodes: 26},\n                        {season: 7, episodes: 26},\n                        {season: 8, episodes: 24},\n                        {season: 9, episodes: 25}\n                    ]\n                },\n                {\n                    shortName: 'parksAndRec',\n                    name: 'Parks and Rec',\n                    episodes: [\n                        {season: 1, episodes: 6},\n                        {season: 2, episodes: 24},\n                        {season: 3, episodes: 16},\n                        {season: 4, episodes: 22},\n                        {season: 5, episodes: 22},\n                        {season: 6, episodes: 22},\n                        {season: 7, episodes: 13}\n                    ]\n                },\n                {\n                    shortName: 'kingOfTheHill',\n                    name: 'King of the Hill',\n                    episodes: [\n                        {season: 1, episodes: 12},\n                        {season: 2, episodes: 23},\n                        {season: 3, episodes: 25},\n                        {season: 4, episodes: 24},\n                        {season: 5, episodes: 20},\n                        {season: 6, episodes: 22},\n                        {season: 7, episodes: 23},\n                        {season: 8, episodes: 22},\n                        {season: 9, episodes: 15},\n                        {season: 10, episodes: 15},\n                        {season: 11, episodes: 12},\n                        {season: 12, episodes: 22},\n                        {season: 13, episodes: 24}\n                    ]\n                },\n                {\n                    shortName: 'ventureBros',\n                    name: 'The Venture Bros.',\n                    episodes: [\n                        {season: 1, episodes: 13},\n                        {season: 2, episodes: 13},\n                        {season: 3, episodes: 13},\n                        {season: 4, episodes: 16},\n                        {season: 5, episodes: 8},\n                        {season: 6, episodes: 8},\n                        {season: 7, episodes: 10}\n                    ]\n                },\n                {\n                    shortName: 'theWire',\n                    name: 'The Wire',\n                    episodes: [\n                        {season: 1, episodes: 13},\n                        {season: 2, episodes: 12},\n                        {season: 3, episodes: 12},\n                        {season: 4, episodes: 13},\n                        {season: 5, episodes: 10}\n                    ]\n                },\n                {\n                    shortName: 'southPark',\n                    name: 'South Park',\n                    episodes: [\n                        {season: 1, episodes: 13},\n                        {season: 2, episodes: 18},\n                        {season: 3, episodes: 17},\n                        {season: 4, episodes: 17},\n                        {season: 5, episodes: 14},\n                        {season: 6, episodes: 17},\n                        {season: 7, episodes: 15},\n                        {season: 8, episodes: 14},\n                        {season: 9, episodes: 14},\n                        {season: 10, episodes: 14},\n                        {season: 11, episodes: 14},\n                        {season: 12, episodes: 14},\n                        {season: 13, episodes: 14},\n                        {season: 14, episodes: 14},\n                        {season: 15, episodes: 14},\n                        {season: 16, episodes: 14},\n                        {season: 17, episodes: 10},\n                        {season: 18, episodes: 10},\n                        {season: 19, episodes: 10},\n                        {season: 20, episodes: 10},\n                        {season: 21, episodes: 10},\n                        {season: 22, episodes: 10}\n                    ]\n                },\n                {\n                    shortName: 'breakingBad',\n                    name: 'Breaking Bad',\n                    episodes: [\n                        {season: 1, episodes: 7},\n                        {season: 2, episodes: 13},\n                        {season: 3, episodes: 13},\n                        {season: 4, episodes: 13},\n                        {season: 5, episodes: 16}\n                    ]\n                },\n                {\n                    shortName: 'sopranos',\n                    name: 'Sopranos',\n                    episodes: [\n                        {season: 1, episodes: 13},\n                        {season: 2, episodes: 13},\n                        {season: 3, episodes: 13},\n                        {season: 4, episodes: 13},\n                        {season: 5, episodes: 13},\n                        {season: 6, episodes: 21}\n                    ]\n                },\n                {\n                    shortName: 'seinfeld',\n                    name: 'Seinfeld',\n                    episodes: [\n                        {season: 1, episodes: 5},\n                        {season: 2, episodes: 12},\n                        {season: 3, episodes: 23},\n                        {season: 4, episodes: 24},\n                        {season: 5, episodes: 22},\n                        {season: 6, episodes: 24},\n                        {season: 7, episodes: 24},\n                        {season: 8, episodes: 22},\n                        {season: 9, episodes: 24}\n                    ]\n                },\n                {\n                    shortName: 'brooklynNineNine',\n                    name: 'Brooklyn Nine-Nine',\n                    episodes: [\n                        {season: 1, episodes: 22},\n                        {season: 2, episodes: 23},\n                        {season: 3, episodes: 23},\n                        {season: 4, episodes: 22},\n                        {season: 5, episodes: 22}\n                    ]\n                },\n            ],\n            search: '',\n            searchHits: null,\n        };\n        //declare methods here\n        // this.printState = this.printState.bind(this);\n        this.clearState = this.clearState.bind(this);\n        this.chooseShow = this.chooseShow.bind(this);\n        this.testButton = this.testButton.bind(this);\n        this.searchHandler = this.searchHandler.bind(this);\n        this.findShow = this.findShow.bind(this);\n        this.search = this.search.bind(this);\n        this.chooseRando = this.chooseRando.bind(this);\n        this.clickYourShow = this.clickYourShow.bind(this);\n    }\n\n    componentDidMount() {\n        // onInit\n    }\n\n    printState = () => console.log('*** Home.state ***', this.state);\n\n    clearState = () => {\n        this.setState({show: null});\n        this.setState({showName: null});\n        this.setState({season: null});\n        this.setState({episode: null});\n    };\n\n    chooseShow = (e) => {\n        this.clearState();\n        // @DESC eventHandler when user clicks a show/button;\n        const name = e.target.name;\n        const show = this.state.shows.find(obj => obj.shortName === name);\n        const showName = show.name;\n\n        this.setState({show: show});\n        this.setState({showName: showName});\n\n        this.chooseEpisode(show);\n    };\n\n    chooseEpisode = (show) => {\n        // @DESC -- make sure whichever function calls this function also calls this.clearState prior to...\n        // @DESC this is a callback function. picks a random season, episode for given show && this.setState;\n        console.log('*** starting chooseEpisode() ***');\n\n        // pick a season at random\n        const season = Math.floor(Math.random() * show.episodes.length) + 1;\n        this.setState({season: season});\n\n        // from that season, pick a random episode\n        const eps = show.episodes[season-1].episodes;\n        const episode = Math.floor(Math.random() * eps) + 1;\n        this.setState({episode: episode});\n\n        // get total episode count for show\n        let count = 0;\n        for (let s of show.episodes) { // in each season of the show (found in show.episodes obj)\n            count += s.episodes; // increase the count by the value of show.episodes[i].episodes\n        }\n        this.setState({showTotal: count});\n    };\n\n    testButton = () => {\n        console.log('*** start testButton() ***');\n    };\n\n    searchHandler = (e) => {\n        const search = e.target.value;\n        this.setState({search: search});\n    };\n\n    findShow = () => {\n        const search = encodeURI(this.state.search);\n        console.log('*** starting findShow() ***', search);\n        fetch(`/search/${search}`)\n            .then(res => res.json())\n            .then(hits => {\n                const temp = JSON.parse(hits);\n                const shows = temp.results;\n                // console.log(shows);\n                for (let i of shows) {\n                    if (i.poster_path) {\n                        i.poster_path = 'https://image.tmdb.org/t/p/original' + i.poster_path;\n                    }\n                }\n                this.setState({searchHits: shows});\n            })\n            .catch(err => console.log(err));\n    };\n\n    search = () => {\n        // make a call to the backend that calls the movie dbase api;\n        console.log('*** search() testing backend ***');\n        fetch('/sample')\n            .then(res => res.json())\n            .then(something => console.log(something))\n            .catch(err => console.log(err));\n    };\n\n    chooseRando = () => {\n        console.log('*** starting chooseRando() ***');\n        this.clearState();\n\n        const rando = Math.floor(Math.random() * this.state.shows.length) + 1;\n        const show = this.state.shows[rando];\n        const showName = show.name;\n\n        this.setState({show: show});\n        this.setState({showName: showName});\n\n        this.chooseEpisode(show);\n    };\n\n    clickYourShow = (e) => {\n        const what = e.target.name;\n        console.log('*** clickYourShow() ***', what);\n    };\n\n    render() {\n\n        const recommendation = {\n            border: '5px solid black',\n            borderRadius: '8px',\n            // margin: '0 auto',\n            // padding: '20px',\n            height: '250px',\n            width: '385px',\n            // padding: 'auto',\n        };\n        const small = {fontSize: 'small'};\n        // const header = {marginBottom: '150px'};\n        // const medium = {};\n        // const whoa = {};\n\n        return(<React.Fragment>\n            <div className=\"\">\n\n                <a name=\"recommendation\"></a>\n                {/*<button className=\"btn btn-sm btn-primary\" onClick={this.printState}>print state</button>*/}\n\n\n                {/* navbar */}\n                <MyNavbar />\n\n                {/* content */}\n                <div className=\"container-fluid my-background text-center\">\n\n                    {/* spacer */}\n                    <div className=\"d-block mb-5 text-left\" style={{minHeight: '200px'}}>\n                        <button className=\"btn btn-sm btn-primary d-inline-block mr-3\" onClick={this.testButton}>Test Button 1</button>\n                        <button className=\"btn btn-sm btn-primary d-inline-block mr-3\" onClick={this.printState}>Print State</button>\n                    </div>\n\n\n\n                    {/* the recommendation */}\n                    {this.state.showName && this.state.season && this.state.episode &&\n                    <div className=\"container-fluid row my-4 mx-auto btn-light\" style={recommendation}>\n                        <h3 className=\"m-auto p-auto\">\n                            You chose<br />\n                            <span className=\"font-weight-bold\"><u>{this.state.showName}</u></span><br />\n                            <span style={small} className=\"\">({this.state.showTotal} total eps)</span><br />&nbsp;<br />\n                            <span className=\"font-weight-bold\"><u>Season {this.state.season} Episode {this.state.episode}</u></span>\n                        </h3>\n                    </div>\n                    }\n                    {/* end recommendation */}\n\n\n\n\n\n\n\n                    {/* search */}\n                    <div className=\"p-4\" style={{border: '1px solid black'}}>\n                        <input type=\"text\" name=\"search\" placeholder=\"search for show\" onChange={this.searchHandler} /><button className=\"btn btn-sm btn-success ml-3\" onClick={this.findShow}>Go</button>\n\n                        <button className=\"btn btn-sm btn-primary d-block mt-3 mx-auto\" style={{width: '50%'}} onClick={this.chooseRando}>Gimme Rando</button>\n                    </div>\n                    {/* end search */}\n\n\n\n\n                    {/* search results */}\n                    {this.state.searchHits &&\n                    <div className=\"container-fluid\" style={{}}>\n                        <p style={{backgroundColor: 'white'}}>click your show</p>\n\n                        {this.state.searchHits.map(show => {\n\n                            return(<React.Fragment>\n\n                                {/*backdrop_path: \"/5isj5gcGT0RrJ7uMO5pnd0AXXC.jpg\"*/}\n                                {/*first_air_date: \"2005-03-24\"*/}\n                                {/*genre_ids: [35]*/}\n                                {/*id: 2316*/}\n                                {/*name: \"The Office\"*/}\n                                {/*origin_country: [\"US\"]*/}\n                                {/*original_language: \"en\"*/}\n                                {/*original_name: \"The Office\"*/}\n                                {/*overview: \"The everyday lives of office employees in the Scranton, Pennsylvania branch of the fictional Dunder Mifflin Paper Company.\"*/}\n                                {/*popularity: 21.503*/}\n                                {/*poster_path: \"/qWnJzyZhyy74gjpSjIXWmuk0ifX.jpg\"*/}\n                                {/*vote_average: 8.05*/}\n                                {/*vote_count: 499*/}\n\n                                {show.poster_path && show.first_air_date && show.id &&\n                                    <a href=\"#\">\n                                        <div className=\"col-12 col-md-2 btn-light d-inline-block text-center my-1 mx-auto mx-md-3 p-1\" style={{border: '1px solid black', verticalAlign: 'top'}} name={show.id} onClick={this.clickYourShow}>\n                                            <img src={show.poster_path} name={show.id} alt=\"pic\" className=\"\" style={{width: '75%', maxWidth: '400px', height: 'auto'}} />\n                                            <h3 className=\"\" style={{fontSize: 'x-large'}}>{show.name}</h3>\n                                            <p>\n                                                First Air Date: {show.first_air_date}, [{show.origin_country}]\n                                                <br /><span className=\"font-weight-bold\">{show.vote_average}</span> (total votes: {show.vote_count})\n                                            </p>\n                                        </div>\n                                    </a>\n                                }\n\n                            </React.Fragment>);\n                        })}\n\n\n                    </div>\n                    }\n\n\n                    {/* end search results*/}\n\n\n\n\n\n\n\n                    {/* popular shows */}\n                    {this.state.shows &&\n                        <div className=\"container-fluid row my-2 mx-auto d-flex align-items-center\" style={{}}>\n\n                            {this.state.shows.map(show => {\n                                return (\n                                    <React.Fragment>\n\n                                        {/* mobile view */}\n                                        <div className=\"d-flex-column d-md-none col-4\">\n                                            <a href=\"#\"\n                                               role=\"button\"\n                                               name={show.shortName}\n                                               className=\"btn btn-sm btn-light mx-auto my-3 py-3 d-block align-self-center\" style={{height: '75px', width: '100px'}}\n                                               onClick={this.chooseShow}>\n                                                {show.name}\n                                            </a>\n                                        </div>\n\n                                        {/* desktop view */}\n                                        <div className=\"d-none d-md-inline-block col-4\">\n                                            <a href=\"#\"\n                                               role=\"button\"\n                                               name={show.shortName}\n                                               className=\"btn btn-lg btn-light mx-auto my-3 py-3 d-block\"\n                                               onClick={this.chooseShow}>\n                                                {show.name}\n                                            </a>\n                                        </div>\n                                    </React.Fragment>\n                                );\n                            })}\n                        </div>\n                    }\n                    {/* end popular shows */}\n                </div>\n                {/* end content > .my-background */}\n\n\n            </div>\n        </React.Fragment>);\n    }\n\n\n\n}\n\n\nexport default Home;","import React from 'react';\nimport Home from './Home';\n\nclass ContentArea extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // key: value,\n        };\n        //declare methods here\n\n    }\n\n    componentDidMount() {\n        // onInit\n    }\n\n    render() {\n\n        return(\n            <React.Fragment>\n                <div className=\"root-div\">\n\n                    <Home/>\n\n                </div>\n            </React.Fragment>\n        );\n    }\n\n\n\n}\n\n\nexport default ContentArea;","import React, { Component } from 'react';\nimport './App.css';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport ContentArea from './components/ContentArea';\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <React.Fragment>\n                    <ContentArea />\n                </React.Fragment>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}